[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mergify_engine"
version = "0.0.0"
description = "mergify is a GitHub Application to automate pull requests"
classifiers = ["Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10"]
homepage = "https://github.com/mergifyio/engine"
authors = ["Mergify <hello@mergify.com>"]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
aiofiles = "*"
cryptography = "*"
daiquiri = ">=3"
datadog = "*"
ddtrace = ">=1.2.0rc1"
fastapi = "*"
first = "*"
graphql-utils = ">=0.4"
gunicorn = {extras = ["setproctitle"], version = "*"}
hiredis = "*"
honcho = "*"
httpx = {version = ">=0.20.0", extras = ["http2"]}
jinja2 = "*"
markdownify = "*"
msgpack = ">=1.0.0"
pyjwt = "*"
python-dotenv = "*"
python-multipart = "*"
pyyaml = "*"
redis = "*"
sentry-sdk = {extras = ["fastapi", "starlette"], version = ">=1.9.0"}
tenacity = "*"
uvicorn = {extras = ["standard"], version = "*"}
voluptuous = "*"
setproctitle = {version = "<1.3.0"}

[tool.poetry.dev-dependencies]
sphinx = "^5.2.1"
sphinxcontrib-spelling = "^7.6.0"
respx = "^0.20.0"
semgrep = "^0.114.0"
types-first = "^2.0.5"
types-freezegun = "^1.1.10"
types-pkg-resources = "^0.1.3"
types-pyyaml = "^6.0.11"
types-redis = "^4.3.20"
pytest = "^7.1.3"
pytest-asyncio = "^0.19.0"
pytest-cov = "^3.0.0"
pytest-github-actions-annotate-failures = "^0.1.7"
pytest-httpserver = "^1.0.6"
pytest-timeout = "^2.1.0"
isort = "^5.10.1"
mypy = "^0.971"
mypy-extensions = "^0.4.3"
vcrpy = ">=4.1.1"
flake8 = "^5.0.4"
flake8-black = "^0.3.3"
flake8-blind-except = "^0.2.1"
flake8-bugbear = "^22.9.23"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.10.0"
flake8-docstrings = "^1.6.0"
flake8-logging-format = "^0.7.5"
flake8-rst-docstrings = "^0.2.7"
flake8-use-fstring = "^1.4"
freezegun = "^1.2.2"
yamllint = "^1.28.0"
reno = "^3.5.0"
pytest-chunks = "^0.2.0"
anys = "^0.2.1"

[tool.poetry.scripts]
  mergify-refresher = "mergify_engine.web_cli:refresher"
  mergify-queues = "mergify_engine.web_cli:queues"
  mergify-clear-token-cache = "mergify_engine.web_cli:clear_token_cache"
  mergify-debug = "mergify_engine.debug:main"
  mergify-worker-status = "mergify_engine.worker:status"
  mergify-reschedule = "mergify_engine.worker:reschedule_now"
  mergify-engine-worker = "mergify_engine.worker:main"
  mergify-import-check-worker = "mergify_engine.import_check:import_check_worker"
  mergify-import-check-web = "mergify_engine.import_check:import_check_web"
  mergify-count-seats = "mergify_engine.count_seats:main"
  mergify-openapi-spec = "mergify_engine.web.api.root:generate_openapi_spec"
  mergify-admin = "mergify_engine.admin:main"
  # TODO(sileht): compat, drop me
  mergify-import-check = "mergify_engine.import_check:import_check_worker"
  mergify-get-redis-cached-keys = "mergify_engine.redis_tools:get_redis_cached_keys"

[tool.poetry.plugins]

[tool.poetry.plugins.mergify_signals]
  noop = "mergify_engine.signals:NoopSignal"
  last_seen = "mergify_engine.usage.last_seen:Signal"
  datadog = "mergify_engine._datadog:Signal"
  eventlogs = "mergify_engine.eventlogs:EventLogsSignal"
  queue_statistics = "mergify_engine.queue.statistics:StatisticsSignal"

[tool.poetry.plugins.mergify_actions]
  assign = "mergify_engine.actions.assign:AssignAction"
  backport = "mergify_engine.actions.backport:BackportAction"
  close = "mergify_engine.actions.close:CloseAction"
  comment = "mergify_engine.actions.comment:CommentAction"
  copy = "mergify_engine.actions.copy:CopyAction"
  delete_head_branch = "mergify_engine.actions.delete_head_branch:DeleteHeadBranchAction"
  dismiss_reviews = "mergify_engine.actions.dismiss_reviews:DismissReviewsAction"
  edit = "mergify_engine.actions.edit:EditAction"
  label = "mergify_engine.actions.label:LabelAction"
  merge = "mergify_engine.actions.merge:MergeAction"
  post_check = "mergify_engine.actions.post_check:PostCheckAction"
  queue = "mergify_engine.actions.queue:QueueAction"
  rebase = "mergify_engine.actions.rebase:RebaseAction"
  request_reviews = "mergify_engine.actions.request_reviews:RequestReviewsAction"
  review = "mergify_engine.actions.review:ReviewAction"
  squash = "mergify_engine.actions.squash:SquashAction"
  update = "mergify_engine.actions.update:UpdateAction"

[tool.poetry.plugins.mergify_commands]
  backport = "mergify_engine.actions.backport:BackportAction"
  copy = "mergify_engine.actions.copy:CopyAction"
  queue = "mergify_engine.actions.queue:QueueAction"
  rebase = "mergify_engine.actions.rebase:RebaseAction"
  refresh = "mergify_engine.actions.refresh:RefreshCommand"
  requeue = "mergify_engine.actions.requeue:RequeueCommand"
  squash = "mergify_engine.actions.squash:SquashAction"
  unqueue = "mergify_engine.actions.unqueue:UnqueueCommand"
  update = "mergify_engine.actions.update:UpdateAction"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers"
asyncio_mode = "auto"
markers = ["recorder", "subscription"]
filterwarnings = [
    "error",
    # FIXME(sileht): no idea where it comes from, backtraces are cryptic
    #  ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>
    "ignore::ResourceWarning"
]

[tool.black]
target-version = ['py310']

[tool.mypy]
strict = true
files = ["mergify_engine"]
show_error_codes = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
       "vcr.*",
       "voluptuous.*",
       "msgpack.*",
       "bs4.*",
       "graphql_utils",
       "markdownify",
]
ignore_missing_imports = true

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = "2"
force_sort_within_sections = true
known_first_party = "mergify_engine,mergify_engine_signals"
known_third_party = "datadog"
default_section = "THIRDPARTY"
