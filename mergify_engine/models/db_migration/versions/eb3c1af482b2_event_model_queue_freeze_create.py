"""Event model queue_freeze_create

Revision ID: eb3c1af482b2
Revises: 8e0dfc0c03be
Create Date: 2023-07-20 16:01:01.535191

"""
import alembic
import sqlalchemy


revision = "eb3c1af482b2"
down_revision = "8e0dfc0c03be"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "github_authenticated_actor",
        sqlalchemy.Column(
            "id", sqlalchemy.BigInteger(), nullable=False, anonymizer_config=None
        ),
        sqlalchemy.Column(
            "type",
            sqlalchemy.Enum("USER", "APPLICATION", name="githubauthenticatedactortype"),
            nullable=True,
            anonymizer_config="anon.random_in_enum(type)",
        ),
        sqlalchemy.Column(
            "name",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 7 )",
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("github_authenticated_actor_pkey")
        ),
    )
    alembic.op.create_table(
        "event_queue_freeze_create",
        sqlalchemy.Column(
            "id", sqlalchemy.BigInteger(), nullable=False, anonymizer_config=None
        ),
        sqlalchemy.Column(
            "queue_name",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 7 )",
        ),
        sqlalchemy.Column(
            "reason",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( words := 7 )",
        ),
        sqlalchemy.Column(
            "cascading",
            sqlalchemy.Boolean(),
            nullable=False,
            anonymizer_config="anon.random_int_between(0,1)",
        ),
        sqlalchemy.Column(
            "created_by_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["created_by_id"],
            ["github_authenticated_actor.id"],
            name=alembic.op.f("event_queue_freeze_create_created_by_id_fkey"),
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_queue_freeze_create_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_queue_freeze_create_pkey")
        ),
    )
    alembic.op.alter_column(
        "event", "pull_request", existing_type=sqlalchemy.INTEGER(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
