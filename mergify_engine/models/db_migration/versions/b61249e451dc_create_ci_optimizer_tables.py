"""Create CI Optimizer tables

Revision ID: b61249e451dc
Revises: 787e61eabca7
Create Date: 2023-04-17 11:10:10.087862

"""

import alembic
import sqlalchemy


revision = "b61249e451dc"
down_revision = "49d540f8edc6"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "github_account",
        sqlalchemy.Column(
            "id",
            sqlalchemy.BigInteger(),
            autoincrement=False,
            nullable=False,
        ),
        sqlalchemy.Column("login", sqlalchemy.Text(), nullable=False),
        sqlalchemy.PrimaryKeyConstraint("id"),
        sqlalchemy.UniqueConstraint("login"),
    )
    alembic.op.create_table(
        "pull_request",
        sqlalchemy.Column(
            "id",
            sqlalchemy.BigInteger(),
            autoincrement=False,
            nullable=False,
        ),
        sqlalchemy.Column("number", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.Column("title", sqlalchemy.Text(), nullable=False),
        sqlalchemy.Column("state", sqlalchemy.Text(), nullable=False),
        sqlalchemy.PrimaryKeyConstraint("id"),
        sqlalchemy.UniqueConstraint("number"),
    )
    alembic.op.create_table(
        "gha_job_run",
        sqlalchemy.Column(
            "id",
            sqlalchemy.BigInteger(),
            autoincrement=False,
            nullable=False,
        ),
        sqlalchemy.Column("workflow_run_id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.Column("workflow_id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.Column("name", sqlalchemy.String(), nullable=False),
        sqlalchemy.Column("owner_id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.Column("repository", sqlalchemy.Text(), nullable=False),
        sqlalchemy.Column(
            "conclusion",
            sqlalchemy.Enum(
                "SUCCESS",
                "FAILURE",
                "SKIPPED",
                "CANCELLED",
                name="jobrunconclusion",
            ),
            nullable=False,
        ),
        sqlalchemy.Column(
            "triggering_event",
            sqlalchemy.Enum(
                "PULL_REQUEST",
                "PULL_REQUEST_TARGET",
                "PUSH",
                "SCHEDULE",
                name="jobruntriggerevent",
            ),
            nullable=False,
        ),
        sqlalchemy.Column(
            "triggering_actor_id",
            sqlalchemy.BigInteger(),
            nullable=False,
        ),
        sqlalchemy.Column(
            "started_at",
            sqlalchemy.DateTime(timezone=True),
            nullable=False,
        ),
        sqlalchemy.Column(
            "completed_at",
            sqlalchemy.DateTime(timezone=True),
            nullable=False,
        ),
        sqlalchemy.Column("run_attempt", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.Column(
            "operating_system",
            sqlalchemy.Enum("LINUX", "MACOS", "WINDOWS", name="jobrunoperatingsystem"),
            nullable=False,
        ),
        sqlalchemy.Column("cores", sqlalchemy.Integer(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["owner_id"],
            ["github_account.id"],
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["triggering_actor_id"],
            ["github_account.id"],
        ),
        sqlalchemy.PrimaryKeyConstraint("id"),
    )
    alembic.op.create_index(
        "gha_job_run_owner_id_repository_started_at_idx",
        "gha_job_run",
        ["owner_id", "repository", "started_at"],
        unique=False,
    )
    alembic.op.create_index(
        "gha_job_run_owner_id_started_at_idx",
        "gha_job_run",
        ["owner_id", "started_at"],
        unique=False,
    )
    alembic.op.create_table(
        "jt_gha_job_run_pull_request",
        sqlalchemy.Column("pull_request_id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.Column("job_run_id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["job_run_id"],
            ["gha_job_run.id"],
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["pull_request_id"],
            ["pull_request.id"],
        ),
        sqlalchemy.PrimaryKeyConstraint("pull_request_id", "job_run_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
