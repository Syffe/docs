"""add new pull_request_file table

Revision ID: fcf5267c5e18
Revises: 986da9271dd1
Create Date: 2023-12-27 17:58:25.001518

"""
import alembic
import sqlalchemy


revision = "fcf5267c5e18"
down_revision = "986da9271dd1"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "pull_request_file",
        sqlalchemy.Column(
            "pull_request_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.Column(
            "pull_request_head_sha",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 20 )",
        ),
        sqlalchemy.Column(
            "sha",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 15 )",
        ),
        sqlalchemy.Column(
            "filename",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 15 )",
        ),
        sqlalchemy.Column(
            "status",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 15 )",
        ),
        sqlalchemy.Column(
            "additions",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config="anon.random_int_between(0, 50)",
        ),
        sqlalchemy.Column(
            "deletions",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config="anon.random_int_between(0, 50)",
        ),
        sqlalchemy.Column(
            "changes",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config="anon.random_int_between(0, 50)",
        ),
        sqlalchemy.Column(
            "blob_url",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 30 )",
        ),
        sqlalchemy.Column(
            "raw_url",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 30 )",
        ),
        sqlalchemy.Column(
            "contents_url",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 30 )",
        ),
        sqlalchemy.Column(
            "patch",
            sqlalchemy.Text(),
            nullable=True,
            anonymizer_config="anon.lorem_ipsum( characters := 30 )",
        ),
        sqlalchemy.Column(
            "previous_filename",
            sqlalchemy.Text(),
            nullable=True,
            anonymizer_config="anon.lorem_ipsum( characters := 15 )",
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["pull_request_id"],
            ["pull_request.id"],
            name=alembic.op.f("pull_request_file_pull_request_id_fkey"),
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "pull_request_id",
            "pull_request_head_sha",
            "filename",
            name=alembic.op.f("pull_request_file_pkey"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
