"""drop retries columns

Revision ID: 9c49881b1fcb
Revises: f9593e3ec0da
Create Date: 2023-12-08 18:19:09.307315

"""
import alembic
import sqlalchemy


revision = "9c49881b1fcb"
down_revision = "e03fc10bcaf2"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.drop_constraint(
        "metadata_extracting_retries",
        "gha_workflow_job",
        type_="check",
    )
    alembic.op.drop_constraint("embedding_retries", "gha_workflow_job", type_="check")

    alembic.op.add_column(
        "gha_workflow_job",
        sqlalchemy.Column(
            "log_processing_attempts",
            sqlalchemy.Integer(),
            server_default="0",
            nullable=False,
            anonymizer_config=None,
        ),
    )
    alembic.op.add_column(
        "gha_workflow_job",
        sqlalchemy.Column(
            "log_processing_retry_after",
            sqlalchemy.DateTime(),
            nullable=True,
            anonymizer_config=None,
        ),
    )
    alembic.op.drop_column("gha_workflow_job", "log_metadata_extracting_attempts")
    alembic.op.drop_column("gha_workflow_job", "log_metadata_extracting_retry_after")
    alembic.op.drop_column("gha_workflow_job", "log_downloading_attempts")
    alembic.op.drop_column("gha_workflow_job", "log_downloading_retry_after")
    alembic.op.drop_column("gha_workflow_job", "log_embedding_attempts")
    alembic.op.drop_column("gha_workflow_job", "log_embedding_retry_after")

    alembic.op.create_check_constraint(
        "processing_retries",
        table_name="gha_workflow_job",
        condition="""
            log_processing_attempts >= 0 AND (
                ( log_processing_attempts = 0 AND log_processing_retry_after IS NULL )
                OR ( log_processing_attempts > 0 AND log_processing_retry_after IS NOT NULL)
            )
            """,
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
