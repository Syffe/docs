"""model_action_gha

Revision ID: 555eb4b26868
Revises: 17e065718bf5
Create Date: 2023-08-31 15:33:46.348640

"""
import alembic
import sqlalchemy
from sqlalchemy.dialects import postgresql


revision = "555eb4b26868"
down_revision = "17e065718bf5"
branch_labels = None
depends_on = None


def upgrade() -> None:
    alembic.op.execute("ALTER TYPE eventtype ADD VALUE 'action.github_actions'")

    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "event_action_github_actions",
        sqlalchemy.Column(
            "id", sqlalchemy.BigInteger(), nullable=False, anonymizer_config=None
        ),
        sqlalchemy.Column(
            "workflow",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 7)",
        ),
        sqlalchemy.Column(
            "inputs",
            postgresql.JSONB(astext_type=sqlalchemy.Text()),  # type: ignore [no-untyped-call]
            nullable=False,
            anonymizer_config="custom_masks.jsonb_obj(0, 3, ARRAY['text', 'integer', 'boolean'])",
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["id"],
            ["event.id"],
            name=alembic.op.f("event_action_github_actions_id_fkey"),
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_github_actions_pkey")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
