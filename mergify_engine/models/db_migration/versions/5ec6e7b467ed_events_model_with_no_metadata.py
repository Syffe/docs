"""Events model with no metadata

Revision ID: 5ec6e7b467ed
Revises: c598a90bd5e4
Create Date: 2023-07-12 15:32:30.955146

"""
import alembic
import sqlalchemy


revision = "5ec6e7b467ed"
down_revision = "c598a90bd5e4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "event_action_rebase",
        sqlalchemy.Column("id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_action_rebase_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_rebase_pkey")
        ),
    )
    alembic.op.create_table(
        "event_action_refresh",
        sqlalchemy.Column("id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_action_refresh_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_refresh_pkey")
        ),
    )
    alembic.op.create_table(
        "event_action_requeue",
        sqlalchemy.Column("id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_action_requeue_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_requeue_pkey")
        ),
    )
    alembic.op.create_table(
        "event_action_squash",
        sqlalchemy.Column("id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_action_squash_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_squash_pkey")
        ),
    )
    alembic.op.create_table(
        "event_action_unqueue",
        sqlalchemy.Column("id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_action_unqueue_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_unqueue_pkey")
        ),
    )
    alembic.op.create_table(
        "event_action_update",
        sqlalchemy.Column("id", sqlalchemy.BigInteger(), nullable=False),
        sqlalchemy.ForeignKeyConstraint(
            ["id"], ["event.id"], name=alembic.op.f("event_action_update_id_fkey")
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id", name=alembic.op.f("event_action_update_pkey")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
