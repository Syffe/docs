"""add new table pull_request_head_sha_history

Revision ID: d9020c768f39
Revises: bf59bf717b18
Create Date: 2023-11-29 17:22:31.688827

"""
import alembic
import sqlalchemy


revision = "d9020c768f39"
down_revision = "bf59bf717b18"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "pull_request_head_sha_history",
        sqlalchemy.Column(
            "id",
            sqlalchemy.BigInteger(),
            autoincrement=True,
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.Column(
            "head_sha",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 7 )",
        ),
        sqlalchemy.Column(
            "timestamp",
            sqlalchemy.DateTime(timezone=True),
            server_default=sqlalchemy.text("now()"),
            nullable=False,
            anonymizer_config="anon.dnoise(timestamp, ''2 days'')",
        ),
        sqlalchemy.Column(
            "pull_request_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["pull_request_id"],
            ["pull_request.id"],
            name=alembic.op.f("pull_request_head_sha_history_pull_request_id_fkey"),
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "id",
            name=alembic.op.f("pull_request_head_sha_history_pkey"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
