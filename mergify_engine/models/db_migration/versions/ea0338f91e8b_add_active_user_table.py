"""add active_user table

Revision ID: ea0338f91e8b
Revises: e29950fca35d
Create Date: 2024-01-17 14:55:27.057308

"""
import alembic
import sqlalchemy
from sqlalchemy.dialects import postgresql


revision = "ea0338f91e8b"
down_revision = "e29950fca35d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "active_user",
        sqlalchemy.Column(
            "repository_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.Column(
            "user_github_account_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.Column(
            "last_seen_at",
            sqlalchemy.DateTime(timezone=True),
            nullable=False,
            anonymizer_config="anon.dnoise(last_seen_at, ''2 days'')",
        ),
        sqlalchemy.Column(
            "last_event",
            postgresql.JSONB(astext_type=sqlalchemy.Text()),  # type: ignore[no-untyped-call]
            nullable=False,
            anonymizer_config="custom_masks.jsonb_obj(2, 2, ARRAY[''text''])",
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["repository_id"],
            ["github_repository.id"],
            name=alembic.op.f("active_user_repository_id_fkey"),
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["user_github_account_id"],
            ["github_account.id"],
            name=alembic.op.f("active_user_user_github_account_id_fkey"),
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "repository_id",
            "user_github_account_id",
            name=alembic.op.f("active_user_pkey"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
