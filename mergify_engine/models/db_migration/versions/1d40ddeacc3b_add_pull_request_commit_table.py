"""add pull_request_commit table

Revision ID: 1d40ddeacc3b
Revises: 9442ab168f91
Create Date: 2023-11-22 21:55:39.696172

"""
import alembic
import sqlalchemy
from sqlalchemy.dialects import postgresql


revision = "1d40ddeacc3b"
down_revision = "9442ab168f91"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    alembic.op.create_table(
        "pull_request_commit",
        sqlalchemy.Column(
            "index",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.Column(
            "sha",
            sqlalchemy.Text(),
            nullable=False,
            anonymizer_config="anon.lorem_ipsum( characters := 15 )",
        ),
        sqlalchemy.Column(
            "pull_request_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config=None,
        ),
        sqlalchemy.Column(
            "parents",
            sqlalchemy.ARRAY(
                postgresql.JSONB(astext_type=sqlalchemy.Text()),  # type: ignore[no-untyped-call]
                dimensions=1,
            ),
            nullable=False,
            anonymizer_config="custom_masks.json_obj_array(0, 3, ARRAY['sha'])",
        ),
        sqlalchemy.Column(
            "commit",
            postgresql.JSONB(astext_type=sqlalchemy.Text()),  # type: ignore[no-untyped-call]
            nullable=False,
            anonymizer_config="custom_masks.jsonb_obj(2, 2, ARRAY[''text''])",
        ),
        sqlalchemy.Column(
            "committer_id",
            sqlalchemy.BigInteger(),
            nullable=False,
            anonymizer_config="anon.random_int_between(1,100000)",
        ),
        sqlalchemy.Column(
            "author_id",
            sqlalchemy.BigInteger(),
            nullable=True,
            anonymizer_config="anon.random_int_between(1,100000)",
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["author_id"],
            ["github_account.id"],
            name=alembic.op.f("pull_request_commit_author_id_fkey"),
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["committer_id"],
            ["github_account.id"],
            name=alembic.op.f("pull_request_commit_committer_id_fkey"),
        ),
        sqlalchemy.ForeignKeyConstraint(
            ["pull_request_id"],
            ["pull_request.id"],
            name=alembic.op.f("pull_request_commit_pull_request_id_fkey"),
        ),
        sqlalchemy.PrimaryKeyConstraint(
            "sha",
            "pull_request_id",
            name=alembic.op.f("pull_request_commit_pkey"),
        ),
    )
    alembic.op.create_index(
        alembic.op.f("pull_request_commit_pull_request_id_idx"),
        "pull_request_commit",
        ["pull_request_id"],
        unique=False,
    )
    alembic.op.create_index(
        alembic.op.f("pull_request_commit_sha_idx"),
        "pull_request_commit",
        ["sha"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # NOTE(sileht): We don't want to support downgrades as it means we will
    # drop columns. And we don't want to provide tooling that may drop data.
    # For restoring old version of the database, the only supported process is
    # to use a backup.
    pass
