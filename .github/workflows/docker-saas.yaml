name: Docker SaaS
permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'dockerfiles/**'
      - 'datadog/**'
      - 'datadog-wrapper.sh'
      - 'installer/**'
      - 'onpremise/**'
      - 'fake.env'
      - '.github/workflows/docker-*.yaml'

concurrency:
  # yamllint disable-line rule:line-length
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  docker-saas:
    timeout-minutes: 15
    runs-on: ubuntu-20.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6363:6379
    steps:
      - name: Fetch job check run information
        id: fetch-check-run
        if: always()
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            const job = data.jobs.find(
              (j) => j.name.includes("${{ github.job }}")
            )
            core.setOutput("job_url", job.html_url);
            core.setOutput("job_id", String(job.id));

      - name: Deployment start
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # yamllint disable rule:line-length
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Starting deployment (${{ steps.fetch-check-run.outputs.job_id }}) of mergify-engine*"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Job log",
                      "emoji": true
                    },
                    "url": "${{ steps.fetch-check-run.outputs.job_url }}"
                  }
                }
              ]
            }
          # yamllint enable rule:line-length
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: ⬇️ Checkout
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true

      # NOTE(sileht):  github.event.pull_request.head.sha is not set for push event
      # so we pick the HEAD sha if the checkout for the image:
      # * for push, HEAD is main branch head (default actions/checkout)
      # * for pull_request_target, HEAD is github.event.pull_request.head.sha (thanks to actions/checkout)
      - name: 📝 Prepare variables
        id: vars
        run: |
          HEROKU_ENVIRONMENT="mergify-engine"
          echo "::set-output name=HEROKU_ENVIRONMENT::${HEROKU_ENVIRONMENT}"

          VERSION="${{ github.ref_name }}"
          echo "::set-output name=VERSION::${VERSION}"

          SHA="$(/usr/bin/git log -1 --format='%H')"
          echo "::set-output name=SHA::${SHA}"

          PYTHON_VERSION="$(cut -d- -f2 runtime.txt)"
          echo "::set-output name=PYTHON_VERSION::${PYTHON_VERSION}"

          BUILD_DATE="$(date '+%Y-%m-%d')"
          echo "::set-output name=BUILD_DATE::${BUILD_DATE}"

          cat \
            dockerfiles/Dockerfile.common \
            dockerfiles/Dockerfile.saas \
            > Dockerfile

      - name: ⚙️ Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: ⚙️ Build & cache all layers
        uses: docker/build-push-action@v3
        with:
          # NOTE(sileht): COMMON section must be the same on all build steps
          # GitHub workflow does not support Yaml Anchors, so we have to duplciate it...
          build-args: |
            PYTHON_VERSION=${{ steps.vars.outputs.PYTHON_VERSION }}
            MERGIFYENGINE_VERSION=${{ steps.vars.outputs.VERSION }}
            MERGIFYENGINE_SHA=${{ steps.vars.outputs.SHA }}
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=local,dest=/home/runner/docker-cache

      - name: ⚙️  Upload layers cache to GitHub Action Cache
        uses: docker/build-push-action@v3
        with:
          # NOTE(sileht): COMMON section must be the same on all build steps
          # GitHub workflow does not support Yaml Anchors, so we have to duplciate it...
          build-args: |
            PYTHON_VERSION=${{ steps.vars.outputs.PYTHON_VERSION }}
            MERGIFYENGINE_VERSION=${{ steps.vars.outputs.VERSION }}
            MERGIFYENGINE_SHA=${{ steps.vars.outputs.SHA }}
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
          context: .
          push: false
          cache-from: type=local,src=/home/runner/docker-cache
          cache-to: type=gha,mode=max

      - name: ⚙️ Build saas-web
        uses: docker/build-push-action@v3
        with:
          target: saas-web
          tags: web:tmp
          outputs: type=docker
          # COMMON
          build-args: |
            PYTHON_VERSION=${{ steps.vars.outputs.PYTHON_VERSION }}
            MERGIFYENGINE_VERSION=${{ steps.vars.outputs.VERSION }}
            MERGIFYENGINE_SHA=${{ steps.vars.outputs.SHA }}
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
          context: .
          push: false
          cache-from: type=local,src=/home/runner/docker-cache

      - name: ⚙️ Build saas-worker-shared
        uses: docker/build-push-action@v3
        with:
          target: saas-worker-shared
          tags: worker-shared:tmp
          outputs: type=docker
          # COMMON
          build-args: |
            PYTHON_VERSION=${{ steps.vars.outputs.PYTHON_VERSION }}
            MERGIFYENGINE_VERSION=${{ steps.vars.outputs.VERSION }}
            MERGIFYENGINE_SHA=${{ steps.vars.outputs.SHA }}
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
          context: .
          push: false
          cache-from: type=local,src=/home/runner/docker-cache

      - name: ⚙️ Build saas-worker-dedicated
        uses: docker/build-push-action@v3
        with:
          target: saas-worker-dedicated
          tags: worker-dedicated:tmp
          outputs: type=docker
          # COMMON
          build-args: |
            PYTHON_VERSION=${{ steps.vars.outputs.PYTHON_VERSION }}
            MERGIFYENGINE_VERSION=${{ steps.vars.outputs.VERSION }}
            MERGIFYENGINE_SHA=${{ steps.vars.outputs.SHA }}
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
          context: .
          push: false
          cache-from: type=local,src=/home/runner/docker-cache

      - name: 🏓 Testing
        run: |
          for i in web worker-shared worker-dedicated; do
            docker run \
              --env-file fake.env \
              -e MERGIFYENGINE_STORAGE_URL=redis://redis:6363 \
              --entrypoint /bin/bash \
              $i:tmp \
              -c '/datadog-wrapper.sh mergify-import-check-worker;
                  /datadog-wrapper.sh mergify-import-check-web;'
          done

      ################
      # SaaS RELEASE #
      ################
      #
      # Next steps are only on main branch for pushing change in production
      #
      - name: 👮 Log into in Heroku
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          cat >~/.netrc <<EOF
          machine api.heroku.com
              login prod+heroku@mergify.com
              password ${{secrets.HEROKU_API_KEY}}
          machine git.heroku.com
              login prod+heroku@mergify.com
              password ${{secrets.HEROKU_API_KEY}}
          EOF
          heroku container:login

      - name: 📜 Tag and Push
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          HEROKU_ENVIRONMENT: ${{ steps.vars.outputs.HEROKU_ENVIRONMENT }}
        run: |
          for i in web worker-shared worker-dedicated; do
            image="registry.heroku.com/${HEROKU_ENVIRONMENT}/${i}:latest"
            docker tag "${i}:tmp" "$image"
            docker push "$image"
          done

      - name: 🚀 Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          HEROKU_ENVIRONMENT: ${{ steps.vars.outputs.HEROKU_ENVIRONMENT }}
        run: |
          for i in web worker-shared worker-dedicated; do
            heroku container:release -a "${HEROKU_ENVIRONMENT}" "${i}"
          done

      - name: Prepare report status
        id: report-status
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          if [ "${{ job.status }}" == "success" ] ; then
            emoji="🦾"
          elif [ "${{ job.status }}" == "cancelled" ] ; then
            emoji="✋"
          else
            emoji="💥"
          fi

          cat > slack_message <<EOF
          *Deployment (${{ steps.fetch-check-run.outputs.job_id }}) of mergify-engine finished ${emoji}*
          Conclusion: ${{ job.status }}
          \`\`\`
          $(git log -1)
          \`\`\`
          EOF
          SLACK_MESSAGE=$(cat slack_message)
          SLACK_MESSAGE="${SLACK_MESSAGE//'%'/'%25'}"
          SLACK_MESSAGE="${SLACK_MESSAGE//$'\n'/'%0A'}"
          SLACK_MESSAGE="${SLACK_MESSAGE//$'\r'/'%0D'}"
          echo "::set-output name=slack_message::$SLACK_MESSAGE"

      - name: Report Status
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # yamllint disable rule:line-length
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJSON(steps.report-status.outputs.slack_message) }}
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Job log",
                      "emoji": true
                    },
                    "url": "${{ steps.fetch-check-run.outputs.job_url }}"
                  }
                }
              ]
            }
          # yamllint enable rule:line-length
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
