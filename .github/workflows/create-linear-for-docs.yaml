# yamllint disable rule:line-length
name: Create Docs Linear Issue on PR merge
on:
  pull_request:
    types: [closed]
jobs:
  create_issue:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'need documentation')
    steps:
      - name: Create issue in Linear
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          JSON_PAYLOAD=$(jq -n \
                          --arg title "Docs for $PR_TITLE" \
                          --arg desc "Documentation needed for merged PR: $PR_URL" \
                          --arg teamId "b3feece8-d97e-4d35-85f0-dd0e45be5d53" \
                          --arg stateId "cdd327d2-7875-4636-ba9d-adccf335d888" \
                          --arg labelId "4e23b066-c7a3-4def-9596-ee18b455fe15" \
                          '{
                            "query": "mutation ($title: String!, $description: String!, $teamId: String!, $labelId: String!) { issueCreate(input: { title: $title, description: $description, teamId: $teamId, labelIds: [$labelId], stateId: $stateId }) { success issue { id title } } }",
                            "variables": {
                              "title": $title,
                              "description": $desc,
                              "teamId": $teamId,
                              "stateId": $stateId,
                              "labelId": $labelId
                            }
                          }')
          curl -X POST "https://api.linear.app/graphql" \
          -H "Authorization: Bearer ${{ secrets.LINEAR_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD"
