# yamllint disable rule:line-length
name: Create Docs Linear Issue on PR merge
on:
  pull_request:
    types: [closed]
jobs:
  create_issue:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'need documentation')
    steps:
      - name: Create issue in Linear
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          EMAIL_MAPPING: ${{ vars.LINEAR_EMAIL_MAPPING }}
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
        run: |
          echo "Author: ${PR_AUTHOR}"
          ASSIGNEE_EMAIL=$(echo "$EMAIL_MAPPING" | awk '/ '"${PR_AUTHOR}"'$/{print $1}')
          if [ -z "$ASSIGNEE_EMAIL" ]; then
            echo "Email of ${PR_AUTHOR} not found in email mapping: ${EMAIL_MAPPING}"
            exit 1
          fi
          echo "Author email: ${ASSIGNEE_EMAIL}"


          JSON_PAYLOAD=$(jq -n \
             --arg email "$ASSIGNEE_EMAIL" \
            '{
              "query" : "query Query($filter: UserFilter) { users(filter: $filter) { nodes { id } } }",
              "variables": {"filter":{"email":{"eq":$email}}}
            }'
          )

          echo "Author linear id getter request: $JSON_PAYLOAD"
          ASSIGNEE_ID_RESPONSE=$(curl -X POST "https://api.linear.app/graphql" \
          -H "Authorization: ${LINEAR_API_KEY}" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD")
          echo "Author linear id getter response: $ASSIGNEE_ID_RESPONSE"

          ASSIGNEE_ID=$(echo "$ASSIGNEE_ID_RESPONSE" | jq -r .data.users.nodes[0].id)
          echo "Author linear id: ${ASSIGNEE_ID}"

          JSON_PAYLOAD=$(jq -n \
                          --arg title "Docs for $PR_TITLE" \
                          --arg desc "Documentation needed for merged PR: $PR_URL" \
                          --arg teamId "b3feece8-d97e-4d35-85f0-dd0e45be5d53" \
                          --arg assigneeId "$ASSIGNEE_ID" \
                          --arg labelId "4e23b066-c7a3-4def-9596-ee18b455fe15" \
                          '{ "query": "mutation (
                                 $title: String!,
                                 $description: String!,
                                 $teamId: String!,
                                 $labelId: String!,
                                 $assigneeId: String!
                               ) {
                                 issueCreate(input: {
                                   title: $title,
                                   description: $description,
                                   teamId: $teamId,
                                   assigneeId: $assigneeId,
                                   labelIds: [$labelId],
                                   stateId: \"cdd327d2-7875-4636-ba9d-adccf335d888\"
                                 })
                                 { success issue { id title } }
                             }",
                             "variables": {
                               "title": $title,
                               "description": $desc,
                               "teamId": $teamId,
                               "labelId": $labelId,
                               "assigneeId": $assigneeId
                             }
                           }')
          echo "Linear ticket creation request: $JSON_PAYLOAD"

          curl -X POST "https://api.linear.app/graphql" \
          -H "Authorization: ${LINEAR_API_KEY}" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD"

      - name: Report Status
        if: failure()
        # yamllint disable-line rule:line-length
        # nosemgrep: yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha
        uses: Mergifyio/gha-slack-notification@main
        with:
          message: "create-linear-for-docs failed"
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WORKFLOWS_WEBHOOK_URL }}
