name: Upload production docs to GCP

on:
  push:
    branches:
      - main

jobs:
  docs-upload-to-gcp-prod:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3.3.0
        with:
          persist-credentials: false

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.11.2

      - name: Setup Node 🔧
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Fetch job check run information
        id: fetch-check-run
        if: always()
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            const job = data.jobs.find(
              (j) => j.name.includes("${{ github.job }}")
            )
            core.setOutput("job_url", job.html_url);
            core.setOutput("job_id", String(job.id));

      - name: Deployment start
        if: always()
        uses: Mergifyio/gha-slack-notification@main
        with:
          # yamllint disable-line rule:line-length
          message: "*Starting deployment (${{ steps.fetch-check-run.outputs.job_id }}) of documentation (sphinx)*"
          job_url: ${{ steps.fetch-check-run.outputs.job_url }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK_URL }}

      - name: Build 🔧
        run: |
          sudo apt-get install -y graphviz
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe docs

      - name: Setup Google Auth 🔧
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_DOCS_CREDENTIAL_JSON }}"

      - name: Deploy 🚀
        uses: google-github-actions/upload-cloud-storage@v1.0.0
        with:
          path: docs/build
          destination: mergify-docs-prod
          parent: false

      - name: Prepare report status
        id: report-status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ] ; then
            emoji="🦾"
          elif [ "${{ job.status }}" == "cancelled" ] ; then
            emoji="✋"
          else
            emoji="💥"
          fi

          JOB_ID="${{ steps.fetch-check-run.outputs.job_id }}"
          SLACK_TEXT_MESSAGE=$(cat <<EOF
          *Deployment ($JOB_ID) of documentation (shpinx) finished ${emoji}*
          Conclusion: ${{ job.status }}
          \`\`\`
          $(git log -1)
          \`\`\`
          EOF
          )

          # Replace newline with explicit \n
          SLACK_TEXT_MESSAGE=$(echo "$SLACK_TEXT_MESSAGE" | awk '{printf "%s\\n", $0}')

          echo "SLACK_TEXT_MESSAGE=${SLACK_TEXT_MESSAGE}" >> "$GITHUB_OUTPUT"

      - name: Report Status
        if: always()
        uses: Mergifyio/gha-slack-notification@main
        with:
          message: ${{ steps.report-status.outputs.SLACK_TEXT_MESSAGE }}
          job_url: ${{ steps.fetch-check-run.outputs.job_url }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK_URL }}
