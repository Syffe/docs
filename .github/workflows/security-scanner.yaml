name: Scan docker image
permissions: read-all

# NOTE(sileht): we use on premise image for pull request tests
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/security-scanner.yml"

concurrency:
  # yamllint disable-line rule:line-length
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  docker-image-security-scan:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    steps:
      - name: üëÆ Log into in Heroku
        if: github.event_name != 'pull_request'
        run: |
          cat >~/.netrc <<EOF
          machine api.heroku.com
              login prod+heroku@mergify.com
              password ${{secrets.HEROKU_API_KEY}}
          machine git.heroku.com
              login prod+heroku@mergify.com
              password ${{secrets.HEROKU_API_KEY}}
          EOF
          heroku container:login

      - name: ‚òÅÔ∏è  Download latest image
        id: download-image
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            image=mergifyio/engine:latest
          else
            image=registry.heroku.com/mergify-engine/web:latest
          fi
          docker pull $image
          echo "image-ref=$image" >> "$GITHUB_OUTPUT"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: ${{ steps.download-image.outputs.image-ref }}
          format: "json"
          scanners: "vuln"
          output: "docker-security-scan.json.tmp"

      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v3.3.0

      - name: Keep only the results section
        if: github.event_name != 'pull_request'
        id: update
        # yamllint disable rule:line-length
        run: |
          BEFORE="$(jq '.[].Vulnerabilities|length' < docker-security-scan.json)"
          jq --raw-output '.Results | del(.[].Vulnerabilities[].Layer) | del(.[].Vulnerabilities[].LastModifiedDate)' docker-security-scan.json.tmp > docker-security-scan.json
          rm -f docker-security-scan.json.tmp
          AFTER="$(jq '.[].Vulnerabilities|length' < docker-security-scan.json)"
          if [[ $BEFORE -lt $AFTER ]]; then
            echo "labels=new CVE" >> "$GITHUB_OUTPUT"
          fi

        # yamllint enable rule:line-length
      - name: Create the Pull Request
        if: github.event_name != 'pull_request'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.MERGIFY_CI_BOT_PAT }}
          author: mergify-ci-bot <mergify-ci-bot@users.noreply.github.com>
          title: "chore(docker): image security scanning report"
          labels: ${{ steps.update.outputs.labels }}
          body: >
            This is the docker image security scanning report
          branch: trivy/daily-report
          base: main

      - name: Check outputs
        if: github.event_name != 'pull_request'
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"


      - name: Report Status
        if: failure() && github.event_name != 'pull_request'
        uses: Mergifyio/gha-slack-notification@main
        with:
          message: "Docker image security scan"
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WORKFLOWS_WEBHOOK_URL }}
