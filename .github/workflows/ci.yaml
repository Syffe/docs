name: Continuous Integration
permissions: read-all

on:
  pull_request:
    branches:
      - main
      - devs/**

concurrency:
  # yamllint disable-line rule:line-length
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

jobs:
  actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download actionlint
        id: get_actionlint
        # yamllint disable-line rule:line-length
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) 1.6.25

      - name: Check workflow files
        run: ${{ steps.get_actionlint.outputs.executable }} -color

  semgrep:
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - name: Build 🔧 & Test 🔍
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe semgrep
  pep8:
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - name: Build 🔧 & Test 🔍
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe linters

  secrets-leakage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Run Trivy secrets scanner 🔍
        # yamllint disable-line rule:line-length
        # nosemgrep: yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha
        uses: aquasecurity/trivy-action@0.12.0
        with:
          scan-type: "fs"
          scan-ref: "./zfixtures"
          trivy-config: "./.github/trivy.yaml"

  postgresql-anonymizer:
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6363:6379
      postgres:
        image: ankane/pgvector:v0.4.4
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --name postgres
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - name: Generate 🔧 & check 🔍 anonymizer rules
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe pg_anonymizer

  import-checks:
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - name: Build 🔧 & Test 🔍
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe import-checks

  test:
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        group: [1, 2, 3, 4, 5]
    services:
      redis:
        image: redis:latest
        ports:
          - 6363:6379
      postgres:
        image: ankane/pgvector:v0.4.4
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --name postgres

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - name: Download test durations
        uses: actions/download-artifact@v3.0.2
        continue-on-error: true
        with:
          name: engine-ci-test-durations

      - name: Build 🔧 & Test 🔍
        # yamllint disable rule:line-length
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe test \
            --splits 5 --group ${{ matrix.group }} \
            --store-durations \
            --durations-path engine-ci-test-durations \
            --splitting-algorithm=least_duration \
            --reruns 3 --only-rerun MissingEventTimeout
        # yamllint enable rule:line-length

      - name: Store test durations
        uses: actions/upload-artifact@v3.1.3
        with:
          name: engine-ci-test-durations
          if-no-files-found: warn
          path: engine-ci-test-durations
  docs:
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11.4

      - name: Setup Node 🔧
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build 🔧
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install -r requirements-poetry.txt
          tools/poetry-ci-install.sh
          poetry run poe docs
