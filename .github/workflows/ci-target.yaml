name: Continuous Integration (target)
permissions: read-all

on:
  # NOTE(sileht): safe as long as we don't run/build anything from the pull request
  # BEWARE THIS WORKFLOW USE actions/checkout, any change must take care of
  # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  pull_request_target:
    branches:
      - main
      - devs/**
    types:
      - opened
      - edited
      - synchronize

jobs:
  github-requests-report:
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read
    if: ${{ !startsWith(github.head_ref, 'mergify/merge-queue/') }}
    runs-on: ubuntu-22.04
    steps:
      - name: Get script
        env:
          GH_TOKEN: ${{ github.token }}
          SCRIPT: ${{ runner.temp }}/compare-github-requests.sh
        run: |
          # NOTE(sileht): for security purpose, we must not use the script we
          # checkout with git, but pick the one from main branch
          # eg: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
          gh api -X GET /repos/Mergifyio/engine/contents/tools/compare-github-requests.sh \
            | jq -r .content \
            | base64 -d \
            > "$SCRIPT"
          chmod +x "$SCRIPT"
          cat "$SCRIPT"

      - name: Computing fetch-depth
        id: fetch-depth
        env:
          COMMITS: ${{ github.event.pull_request.commits }}
        run: echo "result=$((COMMITS+1))" >> "$GITHUB_OUTPUT"

      # NOTE(sileht): That's ok, because the action didn't run anything from the checkout-ed code
      # eg: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
      # yamllint disable-line rule:line-length
      # nosemgrep: yaml.github-actions.security.pull-request-target-code-checkout.pull-request-target-code-checkout
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ steps.fetch-depth.outputs.result }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Generates GitHub HTTP requests change report
        id: report
        env:
          COMMITS: ${{ github.event.pull_request.commits }}
          SCRIPT: ${{ runner.temp }}/compare-github-requests.sh
        run: |
          test -s "$SCRIPT"  # not empty
          test -x "$SCRIPT"  # executable

          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "result<<$EOF"
            $SCRIPT "$COMMITS"
            echo "$EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Publish report
        # yamllint disable-line rule:line-length
        # nosemgrep: yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: github-requests-report
          message: |
            GitHub HTTP requests change report:
            ```
            ${{ steps.report.outputs.result }}
            ```
