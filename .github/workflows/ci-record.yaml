name: Fixtures re-recording

on:
  workflow_dispatch:

  # NOTE(sileht): should be in sync with the chunk later.
  schedule:
    - cron: "0 14 * * 1-5"


jobs:
  record:
    timeout-minutes: 120
    runs-on: ubuntu-20.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6363:6379
      postgres:
        # Pin PostgreSQL to the version that is in ubuntu-latest
        image: postgres:12.5
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        target:
          # - {"name": "GitHub.com", "secret_name": "FIXTURES_RECORDER_CONFIG_GITHUB_DOT_COM"}
          - {"name": "GitHub Enterprise Server", "secret_name": "FIXTURES_RECORDER_CONFIG_GHES_DEV"}

    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3.1.0

      - name: Setup Python 🔧
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.10.8

      - name: Build 🔧 & Test 🔍
        run: |
           cat > test.env << EOF
           ${{ secrets[matrix.target.secret_name] }}
           EOF
           # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
           pip install -r requirements-dev.txt
           DOW=$(date +%u)
           tox -e record -- mergify_engine/tests/functional --splits 5 --group "${DOW}"

      - name: Fetch check run html url
        id: fetch-check-run
        if: always()
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            const job = data.jobs.find(
              (j) => j.name.includes("${{ matrix.target.name }}")
            )
            return job.html_url ;

      - name: Prepare report status
        id: report-status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ] ; then
            echo "color=2eb886" >> "$GITHUB_OUTPUT"
          else
            echo "color=e03e2f" >> "$GITHUB_OUTPUT"
          fi

      - name: Report Status
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#${{ steps.report-status.outputs.color }}",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ matrix.target.name }}, engine fixture re-generation tests",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Conclusion:* ${{ job.status }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Job log",
                          "emoji": true
                        },
                        "url": "${{ steps.fetch-check-run.outputs.result }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
